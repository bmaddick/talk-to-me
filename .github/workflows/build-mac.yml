name: Build Mac App

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install System Dependencies
      run: |
        # Install PortAudio
        brew install portaudio
        PORTAUDIO_PATH=$(brew --prefix portaudio)
        PORTAUDIO_LIB="$PORTAUDIO_PATH/lib/libportaudio.2.dylib"
        echo "PORTAUDIO_LIB=$PORTAUDIO_LIB" >> $GITHUB_ENV

        # Verify PortAudio installation
        if [ ! -f "$PORTAUDIO_LIB" ]; then
          echo "Error: PortAudio library not found"
          exit 1
        fi
        otool -L "$PORTAUDIO_LIB"

    - name: Create App Assets
      run: |
        # Clean up and create directories
        rm -rf src/assets
        mkdir -p src/assets
        echo "Created assets directory"

        # Create white background using base64
        echo "iVBORw0KGgoAAAANSUhEUgAAAyAAAAGQAQAAAACle3N1AAAACXBIWXMAAA7DAAAOwwHHb6hkAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAABJ0RVh0VGl0dGUAV2hpdGUgU3F1YXJlALjNkJYAAAATdEVYdEF1dGhvcgBEZXZpbiBBc3Npc3QC5YbmAAAAIXRFWHRDcmVhdGlvbiBUaW1lADIwMjQtMDEtMTFUMDA6NTk6MzlaJHJnAAAAHHRFWHRTb3VyY2UAaHR0cHM6Ly9pbmtzY2FwZS5vcmeb7jwaAAAAXUlEQVR42u3BMQEAAADCoPVPbQwfoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOD1ACffAAF99yA0AAAAAElFTkSuQmCC" | base64 -d > src/assets/background.png
        echo "Created background image"

        # Use system app icon
        cp /System/Library/CoreServices/CoreTypes.bundle/Contents/Resources/GenericApplicationIcon.icns src/assets/AppIcon.icns
        echo "Created app icon"

        # Verify assets
        ls -l src/assets/

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --use-pep517 -r requirements.txt
        python -m pip install --use-pep517 py2app

        # Create lib directory and copy PortAudio
        sudo mkdir -p /usr/local/lib
        sudo cp "$PORTAUDIO_LIB" /usr/local/lib/
        sudo chmod 755 /usr/local/lib/libportaudio.2.dylib

        # Verify PyAudio installation
        python -c "
        import pyaudio
        print('PyAudio version:', pyaudio.__version__)
        print('PyAudio file:', pyaudio.__file__)
        pa = pyaudio.PyAudio()
        print('PortAudio initialized successfully')
        pa.terminate()
        "

    - name: Build App
      env:
        PORTAUDIO_LIB: ${{ env.PORTAUDIO_LIB }}
      run: |
        # Clean previous builds
        rm -rf build dist

        # Create framework structure before py2app runs
        FRAMEWORK_NAME="libportaudio.2.dylib.framework"
        FRAMEWORK_DIR="build/frameworks/$FRAMEWORK_NAME"
        mkdir -p "$FRAMEWORK_DIR/Versions/A"

        # Copy and configure PortAudio library
        cp "$PORTAUDIO_LIB" "$FRAMEWORK_DIR/Versions/A/libportaudio.2.dylib"
        chmod +x "$FRAMEWORK_DIR/Versions/A/libportaudio.2.dylib"

        # Create framework symlinks
        cd "$FRAMEWORK_DIR/Versions" && ln -s A Current
        cd .. && ln -s Versions/Current/libportaudio.2.dylib libportaudio.2.dylib
        cd ../../..

        # Update library install name
        install_name_tool -id "@executable_path/../Frameworks/$FRAMEWORK_NAME/Versions/A/libportaudio.2.dylib" \
          "$FRAMEWORK_DIR/Versions/A/libportaudio.2.dylib"

        # Verify framework structure
        echo "Framework structure:"
        ls -R build/frameworks/

        # Build with verbose output
        PYTHONPATH="$PWD" python setup.py py2app -vv

        # Fix PyAudio extension references
        PYAUDIO_SO=$(find dist/TalkToMe.app -name "_portaudio.so")
        if [ -n "$PYAUDIO_SO" ]; then
          install_name_tool -change "$PORTAUDIO_LIB" \
            "@rpath/$FRAMEWORK_NAME/Versions/A/libportaudio.2.dylib" "$PYAUDIO_SO"
          install_name_tool -change "/usr/local/lib/libportaudio.2.dylib" \
            "@rpath/$FRAMEWORK_NAME/Versions/A/libportaudio.2.dylib" "$PYAUDIO_SO"
        fi

        # Add rpath to executable
        MACOS_BIN="dist/TalkToMe.app/Contents/MacOS/TalkToMe"
        install_name_tool -add_rpath "@executable_path/../Frameworks" "$MACOS_BIN"

        # Verify final configuration
        echo "Library configuration:"
        otool -L "$FRAMEWORK_DIR/Versions/A/libportaudio.2.dylib"
        if [ -n "$PYAUDIO_SO" ]; then
          echo "PyAudio extension configuration:"
          otool -L "$PYAUDIO_SO"
        fi

    - name: Create DMG
      run: |
        chmod +x create_dmg.sh
        ./create_dmg.sh

    - name: Upload DMG Artifact
      uses: actions/upload-artifact@v4
      with:
        name: TalkToMe-Installer
        path: dist/TalkToMe.dmg

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/TalkToMe.dmg
        name: "TalkToMe v${{ github.ref_name }}"
        prerelease: false
        draft: false
        fail_on_unmatched_files: true
        generate_release_notes: false
        body: |
          # TalkToMe Voice-to-Text Application

          ## Installation
          1. Download `TalkToMe.dmg` by clicking the file below
          2. Double-click the downloaded DMG file to open it
          3. When the installer window appears, drag the TalkToMe icon to the Applications folder
          4. Close the installer window
          5. Open TalkToMe from your Applications folder

          The application will automatically request necessary permissions when launched:
          - Microphone access (for voice recognition)
          - Accessibility access (for typing in any application)

          ## System Requirements
          - macOS 10.13 or later
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
