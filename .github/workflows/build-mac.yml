name: Build Mac App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install and Configure PortAudio
      run: |
        brew install portaudio
        PORTAUDIO_PREFIX=$(brew --prefix portaudio)
        PORTAUDIO_LIB="$PORTAUDIO_PREFIX/lib/libportaudio.2.dylib"

        # Create lib directory and copy PortAudio
        mkdir -p lib
        cp "$PORTAUDIO_LIB" lib/
        chmod 644 lib/libportaudio.2.dylib

        # Fix library install name
        install_name_tool -id "@rpath/libportaudio.2.dylib" lib/libportaudio.2.dylib

        echo "PORTAUDIO_LIB=$PWD/lib/libportaudio.2.dylib" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=$PWD/lib:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install --use-pep517 rubicon-objc
        PORTAUDIO_PATH=$(brew --prefix portaudio) pip install --use-pep517 pyaudio
        pip install -r requirements.txt
        pip install py2app --use-pep517

    - name: Build App
      run: |
        rm -rf dist build

        # Show library info for debugging
        otool -L "$PORTAUDIO_LIB"
        otool -L lib/libportaudio.2.dylib

        # Build with verbose output
        python setup.py py2app -vv

        # Fix library references in app bundle
        PYAUDIO_SO=$(find dist/TalkToMe.app -name "_portaudio.so")
        if [ -n "$PYAUDIO_SO" ]; then
          chmod +w "$PYAUDIO_SO"
          install_name_tool -change "@rpath/libportaudio.2.dylib" \
            "@executable_path/../lib/libportaudio.2.dylib" "$PYAUDIO_SO"
          install_name_tool -add_rpath "@executable_path/../lib" "$PYAUDIO_SO"
        fi

        # Copy PortAudio library to app bundle
        mkdir -p dist/TalkToMe.app/Contents/lib
        cp lib/libportaudio.2.dylib dist/TalkToMe.app/Contents/lib/

    - name: Create DMG
      run: |
        brew install create-dmg
        create-dmg \
          --volname "TalkToMe" \
          --volicon "src/assets/AppIcon.icns" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --icon "TalkToMe.app" 200 190 \
          --hide-extension "TalkToMe.app" \
          --app-drop-link 600 185 \
          "TalkToMe.dmg" \
          "dist/TalkToMe.app"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: TalkToMe
        path: TalkToMe.dmg
