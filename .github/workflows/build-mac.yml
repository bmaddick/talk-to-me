name: Build Mac App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install and Configure PortAudio
      run: |
        brew install portaudio
        PORTAUDIO_PREFIX=$(brew --prefix portaudio)
        PORTAUDIO_LIB="$PORTAUDIO_PREFIX/lib/libportaudio.2.dylib"

        # Create lib directory and copy PortAudio
        mkdir -p lib/libportaudio.2.dylib.framework/Versions/A
        cp "$PORTAUDIO_LIB" lib/libportaudio.2.dylib.framework/Versions/A/
        chmod 755 lib/libportaudio.2.dylib.framework/Versions/A/libportaudio.2.dylib

        # Create framework symlinks
        cd lib/libportaudio.2.dylib.framework
        ln -s Versions/A/libportaudio.2.dylib libportaudio.2.dylib
        cd Versions
        ln -s A Current

        # Set environment variables for build
        echo "DYLD_LIBRARY_PATH=$PWD/lib/libportaudio.2.dylib.framework:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "LIBRARY_PATH=$PWD/lib/libportaudio.2.dylib.framework:$LIBRARY_PATH" >> $GITHUB_ENV

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install --use-pep517 rubicon-objc
        pip install --use-pep517 py2app

        # Install PyAudio with PortAudio path
        export LDFLAGS="-L$PWD/lib/libportaudio.2.dylib.framework/Versions/A"
        export CFLAGS="-I$(brew --prefix portaudio)/include"
        DYLD_LIBRARY_PATH=$PWD/lib/libportaudio.2.dylib.framework pip install --use-pep517 pyaudio

        # Install remaining dependencies
        pip install -r requirements.txt

    - name: Build App
      run: |
        rm -rf dist build

        # Debug environment
        echo "Current directory: $PWD"
        echo "PortAudio lib location:"
        ls -l lib/
        echo "Library path environment:"
        echo $DYLD_LIBRARY_PATH
        echo $DYLD_FALLBACK_LIBRARY_PATH

        # Build with verbose output
        python setup.py py2app -vv

        # Create frameworks directory in app bundle
        mkdir -p dist/TalkToMe.app/Contents/Frameworks

        # Copy PortAudio library
        cp lib/libportaudio.2.dylib dist/TalkToMe.app/Contents/Frameworks/
        chmod 755 dist/TalkToMe.app/Contents/Frameworks/libportaudio.2.dylib

        # Fix library references in app bundle
        find dist/TalkToMe.app -name "*.so" -o -name "*.dylib" | while read lib; do
          echo "Checking $lib"
          otool -L "$lib"
          chmod +w "$lib"
          install_name_tool -change "@rpath/libportaudio.2.dylib" \
            "@executable_path/../Frameworks/libportaudio.2.dylib" "$lib" || true
          install_name_tool -add_rpath "@executable_path/../Frameworks" "$lib" || true
        done

        # Verify final library setup
        ls -lR dist/TalkToMe.app/Contents/Frameworks/
        otool -L dist/TalkToMe.app/Contents/Frameworks/libportaudio.2.dylib

    - name: Create DMG
      run: |
        brew install create-dmg
        create-dmg \
          --volname "TalkToMe" \
          --volicon "src/assets/AppIcon.icns" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --icon "TalkToMe.app" 200 190 \
          --hide-extension "TalkToMe.app" \
          --app-drop-link 600 185 \
          "TalkToMe.dmg" \
          "dist/TalkToMe.app"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: TalkToMe
        path: TalkToMe.dmg
